[
  {
    "ContainingType": "SE_API.Controllers.CategoryController",
    "Method": "AddCategoryExpense",
    "RelativePath": "api/Category/AddCategoryExpense",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryData",
        "Type": "SE.Models.CategoryTypeExpense",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.CategoryController",
    "Method": "AddCategoryIncome",
    "RelativePath": "api/Category/AddCategoryIncome",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryData",
        "Type": "SE.Models.CategoriesType",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.CategoryController",
    "Method": "getExpenseCategory",
    "RelativePath": "api/Category/GetCategoryExpense",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.CategoryController",
    "Method": "getIncomeCategory",
    "RelativePath": "api/Category/GetCategoryIncome",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.GoalController",
    "Method": "DeleteGoalPermanent",
    "RelativePath": "api/Goal/DeleteGoalPermanently/{GId}/{UserId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "GId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.GoalController",
    "Method": "GetAllGoalByUserId",
    "RelativePath": "api/Goal/GetAllGoalByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.GoalController",
    "Method": "PostPostGoal",
    "RelativePath": "api/Goal/PostGoal",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "goal",
        "Type": "SE.Models.Goal",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.GoalController",
    "Method": "UpdateGoal",
    "RelativePath": "api/Goal/UpdateGoal",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "goal",
        "Type": "SE.Models.Goal",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.RepeatedTransactionController",
    "Method": "UpdateTransaction",
    "RelativePath": "api/RepeatedTransaction/EditTransaction",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rdata",
        "Type": "SE.Models.RepeatedTransaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.RepeatedTransactionController",
    "Method": "GetAllTransaction",
    "RelativePath": "api/RepeatedTransaction/GetAllTransaction/{userID}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.RepeatedTransactionController",
    "Method": "GetTranaction",
    "RelativePath": "api/RepeatedTransaction/GetTranaction/{userID}/{transactionData}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "transactionData",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.RepeatedTransactionController",
    "Method": "PostRepeatedTransaction",
    "RelativePath": "api/RepeatedTransaction/PostRepeatedTransaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rdata",
        "Type": "SE.Models.RepeatedTransaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.TransactionController",
    "Method": "DeleteTransaction",
    "RelativePath": "api/Transaction/DeleteTransactionPermanent/{UserId}/{TId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "TId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.TransactionController",
    "Method": "GettransById",
    "RelativePath": "api/Transaction/GetTransactionById/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.TransactionController",
    "Method": "getTransactionByTransactionIdUserId",
    "RelativePath": "api/Transaction/GetTransactionByUserIdTransactionId/{userId}/{transactionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "transactionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.TransactionController",
    "Method": "PostTransaction",
    "RelativePath": "api/Transaction/PostTransaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionDTO",
        "Type": "SE.Models.DTOS.TransactionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.TransactionController",
    "Method": "PutTransaction",
    "RelativePath": "api/Transaction/UpdateTransaction",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionData",
        "Type": "SE.Models.Transaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.UserTokenController",
    "Method": "GetUser",
    "RelativePath": "api/UserToken/GetUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userData",
        "Type": "SE.Models.DTOS.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.UserTokenController",
    "Method": "UserLogin",
    "RelativePath": "api/UserToken/UserLogin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userData",
        "Type": "SE.Models.UserInformation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SE_API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SE_API.WeatherForecast, SE API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]